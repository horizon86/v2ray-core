name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - master
      - v*
      - dev*
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        include:
          # BEGIN MIPS
          - goos: linux
            goarch: mipsle
          # END MIPS
          - goos: windows
            goarch: amd64
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: linux
      GOARCH: mipsle
      GOARM: ''
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          ref: v4.0

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM\"].friendlyName" -r < release/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_OUTPUT
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21

      - name: Get project dependencies
        run: go mod download

      - name: Build V2Ray
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/v2ray -trimpath -ldflags "-s -w -buildid=" ./main

      - name: Rename Windows V2Ray
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv v2ray v2ray.exe

      - name: Download geo files
        run: |
          wget -O release/config/geoip.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip.dat"
          wget -O release/config/geoip-only-cn-private.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip-only-cn-private.dat"
          wget -O release/config/geosite.dat "https://raw.githubusercontent.com/v2fly/domain-list-community/release/dlc.dat"

      - name: Prepare package
        run: cp -v ./release/config/*.* ./build_assets

      - name: Prepare package for Linux
        if: matrix.goos == 'linux'
        run: cp -rv ./release/config/systemd ./build_assets/

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          zip -9vr ../v2ray-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./v2ray-$ASSET_NAME.zip
          DGST=$FILE.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST

      - name: Upload ZIP file to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
          path: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip

      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
